{"version":3,"sources":["component/stateCompo.js","component/pureCompo.js","flat.js","Marker.tsx","header.js","loader.jsx","App.js","serviceWorker.js","index.js"],"names":["StateCompo","props","handleChange","e","setState","nouveauCommentaire","target","value","onInputChange","console","log","state","type","placeholder","this","onChange","Component","PureCompoProps","label","className","init","method","headers","Headers","mode","Flat","handleClick","selectFlat","flat","reviews","content","newCom","map","el","key","author_name","text","placeDetail","textOverflow","result","onClick","masquer","commentaire","commente","comentaires","i","length","push","moyenneDesEtoiles","array","arrayDesNotes","stars","reduce","a","b","val","stateApp","envoyeCommentaire","comment","place_id","image","place","url2","fetch","encodeURIComponent","then","response","json","data","recupData","JSON","parse","contents","title","name","etoiles","rating","Card","style","width","Img","variant","src","geometry","location","lat","lng","Body","Title","Text","Button","Footer","React","Marker","color","backgroundColor","cursor","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","ContainerLoder","App","selectedFlat","handleSearch","event","search","flats","allFlats","filter","RegExp","exec","Math","floor","recupeNum","num","recupeNume","nume","filtrage","alert","handleMapClick","input","showCancel","cancelBtnBsStyle","onConfirm","onReceiveInput","onCancel","hideAlert","reponse","nomNouveauResto","longittude","lattitude","nouveauMarker","imageUrl","photos","photo_reference","prevState","info","latitude","longitude","nouveauNom","bind","navigator","geolocation","getCurrentPosition","position","coords","url1","recupData1","results","catch","error","message","code","PERMISSION_DENIED","url","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","center","xmlns","viewBox","fill","fillOpacity","d","Container","Row","Col","xs","md","Badge","aria-label","Form","Group","controlId","Control","as","sm","bootstrapURLKeys","zoom","options","draggableCursor","Object","keys","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.882ee79c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass StateCompo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nouveauCommentaire: \"\",\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ nouveauCommentaire: e.target.value }); // this.setState obligatoire\n    this.props.onInputChange(e.target.value);\n    console.log(\"value dans compo = \" + e.target.value);\n  };\n  render() {\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Ajouter un commentaire\"\n          value={this.state.nouveauCommentaire}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StateCompo;\n","import React from \"react\";\n\nexport function PureCompoProps({ label }) {\n  return (\n    <div>\n      <div className=\"pureh6\"> Vous: {label}</div>\n    </div>\n  );\n}\n\nexport default PureCompoProps;\n","import React from \"react\";\nimport \"./flat.css\";\nimport StateCompo from \"./component/stateCompo.js\";\nimport PureCompoProps from \"./component/pureCompo.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { Button } from \"react-bootstrap\";\n\nconst myheader = new Headers({\n  'Content-Type': 'application/json; charset=utf-8',\n });\n \n const init={\n  method : 'GET',\n  headers:myheader,\n  mode:'cors'\n };\n\n\n\n\n\n\nclass Flat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateApp: \" \",\n      content: [],\n      placeDetail: [],\n      image: \"\",\n      newCom: [],\n      textOverflow: null,\n    };\n  }\n  //\n  componentDidMount() {\n  \n    // const place = this.props.flat.place_id;\n\n    // // const photo = this.props.flat.photos[0].photo_reference;\n\n    // const url = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${place}&key=AIzaSyATaVEl_K2D9IcWPICwcog27_C1TsOQGr0`;\n    // const url2 = `https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=${photo}&key=AIzaSyATaVEl_K2D9IcWPICwcog27_C1TsOQGr0`;\n    // Promise.all([fetch(url), fetch(url2)])\n    //   .then(([response, response2]) =>\n    //     Promise.all([response.json(), response2.blob()])\n    //   )\n    //   .then(([data1, data2]) =>\n    //     this.setState({\n    //       placeDetail: [data1],\n    //       image: URL.createObjectURL(data2),\n    //     })\n    //   );\n\n    const place = this.props.flat.place_id;\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    // fetch(`https://api.allorigins.win/get?url=${encodeURIComponent('https://wikipedia.org')}`)\n    //                 .then(response => {\n    //                   if (response.ok) return response.json()\n    //                   throw new Error('Network response was not ok.')\n    //                 })\n    //                 .then(data => console.log(data.contents));\n  \n\n    const url2 = `https://maps.googleapis.com/maps/api/place/details/json?place_id=${place}&key=AIzaSyATaVEl_K2D9IcWPICwcog27_C1TsOQGr0`;\n    // fetch(proxyurl + url2, init)\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url2, init)}`)\n    .then((response) => response.json())\n    .then((data) =>{\n      let recupData = JSON.parse(data.contents);\n      this.setState({ placeDetail: recupData })\n    }\n    );\n  }\n\n\n    // Promise.all([fetch(url), fetch(url2)])\n    //   .then(([response, response2]) =>\n    //     Promise.all([response.json(), response2.blob()])\n    //   )\n    //   .then(([data1, data2]) =>\n    //     this.setState({\n    //       placeDetail: [data1],\n    //       image: URL.createObjectURL(data2),\n    //     })\n    //   );\n\n  \n  handleClick = () => {\n    this.props.selectFlat(this.props.flat)\n    \n    if(this.props.flat.reviews === \"pas encore de commentaire soyer le premier !\"){\n     \n      this.setState({\n       \n        content: [\n        \n          this.state.newCom.map((el) => (\n         \n            <ul>\n              <li key={el}>\n                {el.author_name}: {el.text}\n              </li>\n            </ul>\n          \n          \n          ))\n          \n      \n        ]\n      })\n    }\n   \n    else{\n      console.log(this.state.placeDetail)\n    this.setState({\n      textOverflow: \"commentaire\",\n      content: [\n        this.state.placeDetail.result.reviews.map((el) => (\n        \n          <ul>\n            <li key={el}>\n              {el.author_name}: {el.text}\n            </li>\n          </ul>\n        \n        )),\n    \n        <i className=\"fas fa-times-circle fa-2x\" onClick={this.masquer}></i>\n   \n      ],\n    });\n  }\n  };\n  commentaire = (commente) => {\n    const comentaires = [];\n    if (commente) {\n      for (let i = 0; i < commente.length; i++) {\n        // on push tous les nombre dans un tableau\n        comentaires.push(commente[i].reviews); // push l'index ou il y a la clef comment\n      }\n\n      return comentaires;\n    }\n  };\n\n  moyenneDesEtoiles = (array) => {\n    const arrayDesNotes = [];\n    if (array) {\n      // si le restau a des avis dans un tableau\n      for (let i = 0; i < array.length; i++) {\n        // on push tous les nombre dans un tableau\n        arrayDesNotes.push(array[i].stars); // push l'index ou il y a la clef stars\n      }\n      // console.log(arrayDesNotes);\n      // [4,5] <- tableau des avis\n      // On calcul la moyenne grâce à reduce();\n      return (\n        arrayDesNotes.reduce((a, b) => {\n          // a = accumulateur, b = la valeur courante\n          //a = 0, b= 4\n          //a = 4, b = 5  transefere la valeur trouvé dans l'accumulateur\n          //a = 9 , b =0 additionne accumulateur + valeur trouvé\n          return a + b;\n        }, 0) / array.length\n      );\n    }\n  };\n\n  onInputChange = (val) => {\n    this.setState({ stateApp: val });\n  };\n\n  envoyeCommentaire = (e) => {\n \n    let nouveauCommentaire = `Vous: ${this.state.stateApp}` ;\n\n    console.log(nouveauCommentaire);\n\n    let comment = {\n      author_name: \"Vous\",\n      text: this.state.stateApp,\n    };\n    if(this.props.flat.place_id === \"rien\"){\n      //ici tu dois envoyer le commentaire dans un \"lieu\" qui sera affichée\n      \n      \n      this.state.newCom.push(comment);\n      this.setState({\n        content: [\n          this.state.newCom.map((el) => (\n          \n            <ul>\n              <li key={el}>\n                {el.author_name}: {el.text}\n              </li>\n            </ul>\n          \n          ))]\n      })\n      \n\n    } else {\n\n      this.state.placeDetail.result.reviews.push(comment);\n      console.log(this.state.placeDetail.result.reviews);\n      this.setState({\n        textOverflow: \"commentaire\",\n        content: [\n          this.state.placeDetail.result.reviews.map((el) => (\n          \n            <ul>\n              <li key={el}>\n                {el.author_name}: {el.text}\n              </li>\n            </ul>\n          \n          )),\n          <i className=\"fas fa-arrow-circle-up fa-2x\"  onClick={this.masquer}></i>\n        ],\n      });\n    }\n  };\n\n  boucleCommentaire() {\n    for (let i = 0; i < this.state.content.length; i++) {\n      this.state.content[i].map((el) => <li key={el}> {el} </li>);\n    }\n  }\n\n \n\n  // etoile() {\n  //   const recupeEtoile = this.props.flat.rating;\n  //   console.log('recupeEtoile:', recupeEtoile)\n  //   const etoiles = Math.round(recupeEtoile); //4\n  //   console.log('etoiles:', etoiles)\n  //   //  const logoEtoile =  <i class=\"fas fa-star\"></i>\n\n\n    \n\n   \n  // }\n  masquer=()=>{\n  \n    this.setState({\n      content: null,\n      textOverflow: null,\n    })\n      }\n\n  render() {\n    // affiche dans title elements de mon tableau json suivant leur clef\n    const title = this.props.flat.name;\n\n    \n\n   \n    const etoiles =`Note étoile: ${ this.props.flat.rating}`\n\n    // const style = {\n    //   backgroundImage: `url('${this.state.image}')`,\n    // };\n\n    return (\n      <div className=\"flat\">\n        \n        <Card style={{ width: \"16rem\" }} className=\"ombre\">\n          <Card.Img\n            variant=\"top\"\n            src={`https://maps.googleapis.com/maps/api/streetview?size=600x600&location=${this.props.flat.geometry.location.lat},${this.props.flat.geometry.location.lng}&heading=360&pitch=-0.76&key=AIzaSyATaVEl_K2D9IcWPICwcog27_C1TsOQGr0`}\n            // style={{\n            //   backgroundImage: `url('${this.state.stt}')`,\n            // }}\n            className=\"dimension\"\n            onClick={this.handleClick}\n          />\n          <Card.Body>\n            <Card.Title>{title}</Card.Title>\n            <Card.Text>{etoiles}</Card.Text>\n            <div className={this.state.textOverflow}> {this.state.content} </div>\n\n            <StateCompo\n              label={this.state.stateApp}\n              onInputChange={this.onInputChange}\n            />\n            {this.state.stateApp ? (\n              <PureCompoProps label={this.state.stateApp} />\n            ) : (\n              <div></div>\n            )}\n            <Button\n              variant=\"primary\"\n              onClick={this.envoyeCommentaire}\n              className=\"bouton\"\n            >\n              Envoyer\n            </Button>\n          </Card.Body>\n          <Card.Footer>\n            <div className=\"icone\">\n              <i className=\"fab fa-facebook\"></i>\n              <i className=\"fab fa-instagram\"></i>\n              <i className=\"fab fa-twitter\"></i>\n            </div>\n            {/* <small className=\"text-muted\">Resultat 2020</small> */}\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default Flat;\n","import React from 'react';\nimport './Markere.css';\n\n \n\nconst Marker = (props: any) => {\n  \n  const { color, name} = props;\n \n    return (\n      <div>\n        <div\n          className=\"pin bounce\" \n          style={{ backgroundColor: color, cursor: 'pointer' }}\n          title={name}\n          />\n        <div className=\"pulse\" />\n      </div>\n    );\n  };\n\n  export default Marker;","\nimport React from \"react\";\nimport * as ReactBootStrap from\"react-bootstrap\";\nimport \"./Headers.css\";\nclass Headers extends React.Component {\n    render(){\n\n    return(\n    <div>\n\n<ReactBootStrap.Navbar collapseOnSelect expand=\"sm\" className=\"navbar-custom \" variant=\"dark\">\n  <ReactBootStrap.Navbar.Brand href=\"#home\">Express-Food</ReactBootStrap.Navbar.Brand>\n  <ReactBootStrap.Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n \n</ReactBootStrap.Navbar>\n</div>\n    )\n    }\n}\n\nexport default Headers;","import React from 'react';\n// import { WindMillLoading } from 'react-loadingg';\nimport { BoxLoading } from 'react-loadingg';\n\nconst ContainerLoder = () => <BoxLoading />\nexport default ContainerLoder;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport GoogleMap from \"google-map-react\";\nimport Flat from \"./flat.js\";\nimport Marker from \"./Marker.tsx\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport Headers from \"./header\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport ContainerLoder from \"./loader.jsx\";\nimport Button from \"react-bootstrap/Button\";\n\n// api heroku pour passer le CORS controle lors  d'un fetch\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flats: [],\n      allFlats: [], // tableau qui contient les valeur fixe, me servira pour le filtre\n      selectedFlat: null,\n      search: \"\",\n      info: null,\n      latitude: null,\n      longitude: null,\n      value: \"\",\n      alert: null,\n      nouveauNom: \"\",\n      num: \"\",\n      nume: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleMapClick = this.handleMapClick.bind(this);\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n\n          const url1 = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurant&location=${position.coords.latitude},${position.coords.longitude}&radius=5000&keyword=cruise&key=AIzaSyAURsom7c-jmbNERN0wVqb4OzVten2Hy24`;\n\n          fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url1)}`)\n            .then((response) => response.json(), console.log(\"envoyer\"))\n            .then((data) =>{\n              console.log(data)\n              let recupData1= JSON.parse(data.contents)\n         \n              this.setState({ flats: recupData1.results, allFlats: recupData1.results })\n\n            }\n            )\n            .catch(function (error) {\n              console.log(\n                \"Il y a eu un problème avec l'opération fetch: \" + error.message\n              );\n            });\n          console.log(\"Latitude is :\", position.coords.latitude);\n          console.log(this.state.flats);\n          console.log(this.state.allFlats);\n          console.log(url1);\n        },\n        // SI La geloc est refusé\n        (error) => {\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              alert(\n                \"vous avez refuser la Geolocation, Carte sur Paris par default\"\n              );\n              this.setState({ latitude: 48.8534, longitude: 2.3488 }); // coordonnees de paris\n\n              const url =\n                \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=48.8534,2.3488&radius=2000&type=restaurant&keyword=cruise&key=AIzaSyATaVEl_K2D9IcWPICwcog27_C1TsOQGr0\";\n                fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)\n                .then((response) => response.json())\n                .then((data) =>{\nconsole.log(data)\n                 let recupData = JSON.parse(data.contents)\n                  this.setState({ flats: recupData.results, allFlats: recupData.results })\n                }\n                ); // jassigne mes donnes a mon tableau flats\n              console.log(url);\n              break;\n            case error.POSITION_UNAVAILABLE:\n              alert(\n                \" Les informations de localisation ne sont pas disponibles.\"\n              );\n              break;\n            case error.TIMEOUT:\n              alert(\n                \"la demande d'obtention de votre localisation est trop longue.\"\n              );\n              break;\n            case error.UNKNOWN_ERROR:\n              alert(\"Une erreur inconnue est survenued.\");\n              break;\n\n            default:\n              alert(\"Une erreur inconnue est survenue.\");\n          }\n        }\n      );\n    }\n  }\n\n  // \"https://gist.githubusercontent.com/bekri78/7322cd95aef094fdca52c7a82a96106b/raw/00bce7f6775da6ec9f1884e2ca2d653941e4ebb3/flat.json\"\n\n  selectFlat = (flat) => {\n    this.setState({\n      selectedFlat: flat,\n    });\n    console.log(flat);\n  };\n\n  // FILTRAGE resto dans la barre search\n\n  handleSearch = (event) => {\n    this.setState({\n      search: event.target.value,\n      flats: this.state.allFlats.filter((flat) =>\n        new RegExp(event.target.value, \"i\").exec(flat.name)\n      ),\n      selectedFlat: null,\n    });\n  };\n  // FILTRAGE resto par etoile\n  handleChange = (event) => {\n    this.setState({\n      value: event.target.value,\n      flats: this.state.allFlats.filter((flat) =>\n        new RegExp(event.target.value, \"i\").exec(Math.floor(flat.rating))\n      ),\n      selectedFlat: null,\n    });\n  };\n\n  recupeNum = (event) => {\n    this.setState({\n      num: event.target.value,\n    });\n\n    console.log(this.state.num);\n  };\n  recupeNume = (event) => {\n    this.setState({\n      nume: event.target.value,\n    });\n\n    console.log(this.state.nume);\n  };\n\n  filtrage = () => {\n    if (\n      this.state.num > this.state.nume ||\n      this.state.num === this.state.nume\n    ) {\n      alert(\"mauvaise saisie veillez recommencer\");\n    } else {\n      this.setState({\n        flats: this.state.allFlats.filter((flat) =>\n          new RegExp(`[${this.state.num}-${this.state.nume}]`, \"g\").exec(\n            Math.floor(flat.rating)\n          )\n        ),\n        selectedFlat: null,\n      });\n    }\n  };\n\n  // Etoiles = (array) => {\n  //   const arrayDesNotes = [];\n  //   if (array) {\n  //     // si le restau a des avis dans un tableau\n  //     for (let i = 0; i < array.length; i++) {\n  //       // on push tous les nombre dans un tableau\n  //       arrayDesNotes.push(array[i].stars); // push l'index ou il y a la clef stars\n  //     }\n  //     console.log(arrayDesNotes);\n  //     // [4,5] <- tableau des avis\n  //     // On calcul la moyenne grâce à reduce();\n  //     return (\n  //       arrayDesNotes.reduce((a, b) => {\n  //         // a = accumulateur, b = la valeur courante\n  //         //a = 0, b= 4\n  //         //a = 4, b = 5  transefere la valeur trouvé dans l'accumulateur\n  //         //a = 9 , b =0 additionne accumulateur + valeur trouvé\n  //         return a + b;\n  //       }, 0) / array.length\n  //     );\n  //   }\n  // };\n\n  handleMapClick = (event) => {\n    //sweet alert nom du resto\n    this.setState({\n      alert: (\n        <SweetAlert\n          input\n          showCancel\n          cancelBtnBsStyle=\"default\"\n          title=\"Nom du restaurant\"\n          onConfirm={(response) => onReceiveInput(response)} // envoie la valeur du champs dans une function\n          onCancel={this.hideAlert}\n        ></SweetAlert>\n      ),\n    });\n    //----------------------fin du sweet\n    // ici j'englobe tous dans la mon function onReceiveInput car je dois attendre de recevoir la valeur de mon input avant d'inserer mon marker\n    // si j'avais defini un name de base dans mon objet nouveau marker cela pose problème de key multiple\n    const onReceiveInput = (reponse) => {\n      const nomNouveauResto = reponse;\n      console.log(nomNouveauResto);\n\n      this.setState({\n        alert: null,\n      });\n\n      console.log(\"click\");\n      const longittude = event.lng; // recuperation de la longitude au click\n      const lattitude = event.lat; // recupation de la latitude au click\n\n      console.log(lattitude);\n      console.log(longittude);\n\n      // nouveau objet a inserer  dans tableau flats\n      let nouveauMarker = {\n        name: nomNouveauResto,\n        imageUrl:\n          \"https://www.my-business-plan.fr/sites/default/files/Restaurant.jpg\",\n        geometry: {\n          location: {\n            lat: lattitude,\n            lng: longittude,\n          },\n        },\n        place_id: \"rien\",\n        photos: [\n          {\n            photo_reference: \"rien\",\n          },\n        ],\n\n        reviews: \"pas encore de commentaire soyer le premier !\",\n\n        rating: 0,\n      };\n\n      // this.state.flats.push(nouveauMarker);\n      this.setState((prevState) => ({\n        flats: [nouveauMarker, ...prevState.flats],\n        allFlats: [nouveauMarker, ...prevState.allFlats],\n      }));\n\n      //les...(spred ES6) pour conserver valeur dans  un tableau, ajoute dans flats\n    };\n  };\n\n  hideAlert = () => {\n    this.setState({\n      alert: null,\n    });\n  };\n\n  render() {\n    let center = {\n      lat: this.state.latitude, // POSITION maison\n      lng: this.state.longitude, // POSITION maison\n    };\n    if (this.state.selectedFlat) {\n      // centrage de la carte sur l'element flat click\n      center = {\n        lat: this.state.selectedFlat.geometry.location.lat, // POSITION\n        lng: this.state.selectedFlat.geometry.location.lng, // POSITION\n      };\n      console.log(this.state.selectedFlat);\n    }\n\n    return (\n      <div className=\"Container\">\n        <Headers />\n        <div className=\"haut\"></div>\n        <div className=\"intro\">\n          <p className=\"teste\">les meilleurs restaurants proche de chez vous</p>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n            <path\n              fill=\"#0099ff\"\n              fillOpacity=\"1\"\n              d=\"M0,192L48,176C96,160,192,128,288,138.7C384,149,480,203,576,197.3C672,192,768,128,864,101.3C960,75,1056,85,1152,112C1248,139,1344,181,1392,202.7L1440,224L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"\n            ></path>\n          </svg>\n        </div>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs={12} md={6}>\n              <h4>\n                <Badge variant=\"dark\">Filtre Par Nom </Badge>\n              </h4>\n\n              <input\n                className=\"form-control mr-sm-2\"\n                type=\"text\"\n                placeholder=\"recherche par nom\"\n                aria-label=\"Search\"\n                value={this.state.search}\n                onChange={this.handleSearch}\n              />\n\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <h4 className=\"top\">\n                  <Badge variant=\"primary\">Filtre Par Etoile </Badge>\n                </h4>\n\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.value}\n                  onChange={this.handleChange}\n                >\n                  <option value=\"\">Selectionner</option>\n                  <option value=\"0\">0</option>\n                  <option value=\"1\">1</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n                  <option value=\"5\">5</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={7}>\n              <h4>\n                <Badge variant=\"secondary\">Filtre entre deux Etoiles</Badge>\n              </h4>\n              <Row>\n                <Col>\n                  <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.num}\n                        onChange={this.recupeNum}\n                      >\n                        <option value=\"\">Derouler</option>\n                        <option value=\"0\">0</option>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form>\n                </Col>\n                <Col>\n                  <Form>\n                    <Form.Group controlId=\"exampleForm.ControlSelect3\">\n                      <Form.Control\n                        as=\"select\"\n                        value={this.state.nume}\n                        onChange={this.recupeNume}\n                      >\n                        <option value=\"\">Derouler</option>\n                        <option value=\"0\">0</option>\n                        <option>1</option>\n                        <option>2</option>\n                        <option>3</option>\n                        <option>4</option>\n                        <option>5</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form>\n                </Col>\n              </Row>\n\n              <h4>\n                <Button onClick={this.filtrage} type=\"submit\">\n                  Filtrer\n                </Button>\n              </h4>\n            </Col>\n\n            <Col xs={12} sm={12} md={8}>\n              <div className=\"map\">\n                {this.state.alert && this.state.alert}\n                <GoogleMap\n                  bootstrapURLKeys={{\n                    key: \"AIzaSyAURsom7c-jmbNERN0wVqb4OzVten2Hy24\",\n                  }}\n                  center={center}\n                  zoom={12}\n                  // options={this.getMapOptions}\n                  options={{ draggableCursor: \"crosshair\" }}\n                  onClick={this.handleMapClick}\n                >\n                  {this.state.flats &&\n                    this.state.flats.map((el) => (\n                      <Marker\n                        key={el.name}\n                        lat={el.geometry.location.lat} // POSiTION\n                        lng={el.geometry.location.lng} // POSTION\n                        color=\"blue\"\n                      />\n                    ))}\n                  {this.state.selectedFlat &&\n                    Object.keys(this.state.selectedFlat).map((key) => (\n                      <Marker\n                        key={key.name}\n                        lat={this.state.selectedFlat.geometry.location.lat} // POSiTION\n                        lng={this.state.selectedFlat.geometry.location.lng}\n                        color=\"green\"\n                      />\n                    ))}\n\n                  <Marker\n                    // marker pour la position geolocalisation\n                    lat={this.state.latitude}\n                    lng={this.state.longitude}\n                    text=\"Ma position\"\n                    color=\"red\"\n                  />\n                </GoogleMap>\n              </div>\n            </Col>\n\n            <Col xs={12} sm={12} md={4}>\n              <div className=\"main\">\n                <ContainerLoder />\n                <div className=\"flats\">\n                  {console.log(this.state.flats)}\n                  {this.state.flats &&\n                    this.state.flats.map((el) => (\n                      <Flat\n                        key={el.name}\n                        flat={el}\n                        selectFlat={this.selectFlat}\n                        place={el.place_id}\n                      />\n                    ))}\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        <div className=\"pied\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n            <path\n              fill=\"#0099ff\"\n              fillOpacity=\"1\"\n              d=\"M0,32L60,58.7C120,85,240,139,360,186.7C480,235,600,277,720,293.3C840,309,960,299,1080,256C1200,213,1320,139,1380,101.3L1440,64L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"\n            ></path>\n          </svg>\n        </div>\n        <div className=\"milieu\"></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n // <React.StrictMode>\n    <App />,\n // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}